Index: src/main/java/FileHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.io.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class FileHandler {\r\n\r\n    public void gemOplysningerICSV(String fullName, String birthday, String gender, int idNumber, String email, int phoneNumber, String adress, String CompetitionSwimmer) {\r\n        String csvFile = \"medlemmer.csv\";\r\n        try {\r\n            FileWriter fileWriter = new FileWriter(csvFile, true);\r\n            PrintWriter printWriter = new PrintWriter(fileWriter);\r\n\r\n\r\n            String data = String.format(\"%s,%s,%s,%d,%s,%d,%s,%s\\n\", fullName, birthday, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);\r\n\r\n\r\n            printWriter.print(data);\r\n\r\n\r\n            printWriter.close();\r\n            fileWriter.close();\r\n        } catch (IOException e) {\r\n            System.out.println(\"Fejl ved skrivning til CSV-fil: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    public ArrayList<Medlem> loadMedlemmer(){\r\n        ArrayList<Medlem> visAlleMedlemmer = new ArrayList<>();\r\n        try(Scanner scanner = new Scanner(new File(\"medlemmer.csv\"))){\r\n            int index = 1;\r\n            while( scanner.hasNextLine()){\r\n                String[] parts = scanner.nextLine().split(\";\");\r\n                String birthdate = parts[0];\r\n                String fullName = parts[1];\r\n                String gender = parts[2];\r\n                int idNumber = Integer.parseInt(parts[3].trim());\r\n                String email = parts[4];\r\n                int phoneNumber = Integer.parseInt(parts[5].trim());\r\n                String adress = parts[6];\r\n                String isCompetitionSwimmer = parts[7];\r\n                Medlem medlem = new Medlem(birthdate,fullName, gender, idNumber, email, phoneNumber, adress, isCompetitionSwimmer);\r\n                visAlleMedlemmer.add(medlem);\r\n\r\n                index++;\r\n            }\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return visAlleMedlemmer;\r\n    }\r\n\r\n    public void gemOplysningerICSV(Medlem medlem) {\r\n        String csvFile = \"medlemmer.csv\";\r\n        try {\r\n            FileWriter fileWriter = new FileWriter(csvFile, true);\r\n            PrintWriter printWriter = new PrintWriter(fileWriter);\r\n\r\n\r\n            String data = String.format(\"%s;%s;%s;%d;%s;%d;%s;%s\\n\",medlem.getBirthdate(), medlem.getFullName(), medlem.getGender(), medlem.getIdNumber(), medlem.getEmail(), medlem.getPhoneNumber(), medlem.getAdress(), medlem.getCompetitionSwimmer());\r\n\r\n\r\n            printWriter.print(data);\r\n\r\n\r\n            printWriter.close();\r\n            fileWriter.close();\r\n        } catch (IOException e) {\r\n            System.out.println(\"Fejl ved skrivning til CSV-fil: \" + e.getMessage());\r\n        }\r\n    }\r\n\r\n    }\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/FileHandler.java b/src/main/java/FileHandler.java
--- a/src/main/java/FileHandler.java	(revision 7923ebbc37c36f23d79d3ec752584cff5be4bd02)
+++ b/src/main/java/FileHandler.java	(date 1701174989334)
@@ -6,14 +6,14 @@
 
 public class FileHandler {
 
-    public void gemOplysningerICSV(String fullName, String birthday, String gender, int idNumber, String email, int phoneNumber, String adress, String CompetitionSwimmer) {
+    public void gemOplysningerICSV(String birthdate, String fullName, String gender, int idNumber, String email, int phoneNumber, String adress, String CompetitionSwimmer) {
         String csvFile = "medlemmer.csv";
         try {
             FileWriter fileWriter = new FileWriter(csvFile, true);
             PrintWriter printWriter = new PrintWriter(fileWriter);
 
 
-            String data = String.format("%s,%s,%s,%d,%s,%d,%s,%s\n", fullName, birthday, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);
+            String data = String.format("%s;%s;%s;%d;%s;%d;%s;%s\n",birthdate, fullName, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);
 
 
             printWriter.print(data);
Index: src/main/java/UserInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.time.LocalDate;\r\nimport java.time.Period;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.time.format.DateTimeParseException;\r\nimport java.util.Scanner;\r\n\r\npublic class UserInterface {\r\n\r\n    public void StartProgram() {\r\n\r\n\r\n        Scanner scanner = new Scanner(System.in);\r\n        DataBase dataBase = new DataBase();\r\n        boolean keepRunning = true;\r\n\r\n        while (keepRunning) {\r\n            printMenu();\r\n\r\n            int choise = scanner.nextInt();\r\n\r\n            switch (choise) {\r\n                case 1:\r\n                    boolean formandRunning = true;\r\n                    while (formandRunning) {\r\n                        printFormand();\r\n\r\n                        int formandChoice = scanner.nextInt();\r\n\r\n                        switch (FormandChoice) {\r\n\r\n                            case 1:\r\n                                System.out.println();\r\n                                System.out.println(\"Fulde navn\");\r\n                                scanner.nextLine();\r\n                                String fullName = readString();\r\n\r\n\r\n                                System.out.println(\"_________________\");\r\n\r\n                                boolean validDate = false;\r\n                                System.out.println(\"Fødselsdato (dd-MM-yyyy)\");\r\n                                String birthday = scanner.nextLine();\r\n                                while (!validDate) {\r\n                                    birthdate = scanner.nextLine();\r\n                                    try {\r\n                                        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");\r\n\r\n                                        LocalDate birthdate = LocalDate.parse(birthday, formatter);\r\n                                        LocalDate currentDate = LocalDate.now();\r\n                                        int age = Period.between(birthday, currentDate).getYears();\r\n\r\n                                        if (age < 18) {\r\n                                            System.out.println(fullName + \" er \" + age + \" år gammel \" + \"og er derfor juniorsvømmer.\");\r\n                                        } else {\r\n                                            System.out.println(fullName + \" er \" + age + \" år gammel \" + \"og er derfor seniorsvømmer.\");\r\n                                        }\r\n\r\n                                    } catch (Exception e) {\r\n                                        System.out.println(\"Der opstod en fejl. Prøv igen.\");\r\n                                    }\r\n                                }\r\n                                System.out.println(\"_________________\");\r\n\r\n                                System.out.println(\"Køn (Dreng/Mand/Pige/Kvinde)\");\r\n                                String gender = \"\";\r\n                                while (!gender.equalsIgnoreCase(\"Dreng\") && !gender.equalsIgnoreCase(\"Mand\") &&\r\n                                        !gender.equalsIgnoreCase(\"Pige\") && !gender.equalsIgnoreCase(\"Kvinde\")) {\r\n                                    System.out.println(\"Køn (Dreng/Mand/Pige/Kvinde)\");\r\n                                    gender = scanner.nextLine();\r\n\r\n                                    if (!gender.equalsIgnoreCase(\"Dreng\") && !gender.equalsIgnoreCase(\"Mand\") &&\r\n                                            !gender.equalsIgnoreCase(\"Pige\") && !gender.equalsIgnoreCase(\"Kvinde\")) {\r\n                                        System.out.println(\"Ugyldigt input. \\nPrøv igen\");\r\n                                    }\r\n                                    System.out.println(\"_________________\");\r\n                                }\r\n\r\n                                System.out.println(\"E-mail\");\r\n                                String email = readString();\r\n                                System.out.println(\"_________________\");\r\n\r\n                                System.out.println(\"Mobilnummer\");\r\n                                int phoneNumber = readInt();\r\n                                System.out.println(\"_________________\");\r\n\r\n                                System.out.println(\"Adresse\");\r\n                                scanner.nextLine();\r\n                                String adress = readString();\r\n                                System.out.println(\"_________________\");\r\n\r\n\r\n                                System.out.println(\"Er medlemmet konkurrencesvømmer (ja/nej)?\");\r\n                                String CompetitionSwimmer = scanner.nextLine();\r\n\r\n                                if (CompetitionSwimmer.equals(\"ja\")) {\r\n\r\n                                } else if (CompetitionSwimmer.equals(\"nej\")) {\r\n\r\n                                } else {\r\n                                    System.out.println(\"Ugyldigt svar. Indtast enten 'ja' eller 'nej'.\");\r\n                                }\r\n                                System.out.println(\"_________________\");\r\n                                System.out.println(fullName + \" \" + \"er blevet registreret i klubben\");\r\n                                System.out.println();\r\n                                int idNumber = dataBase.getMedlemsListe().size()+1;\r\n                                System.out.println(\"Dette \" + idNumber + \" er\" + \" er medlemmets ID nummer.\");\r\n                                dataBase.tilføjMedlem(birthdate, fullName, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);\r\n                                dataBase.gemOplysningerICSV(birthdate, fullName, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);\r\n                                break;\r\n\r\n                            case 2:\r\n                                System.out.println(\"Her er medlemmerne i delfinsvømmeklubben: \");\r\n                                System.out.println();\r\n                                System.out.println(\"_________________\");\r\n                                System.out.println();\r\n                                dataBase.printMedlemsList();\r\n                                break;\r\n\r\n                            case 3:\r\n                                formandRunning = false;\r\n                                break;\r\n\r\n                        }\r\n\r\n                    }\r\n                    break;\r\n\r\n\r\n                case 2:\r\n                    boolean KassereRunning = true;\r\n                    while (KassereRunning) {\r\n                        System.out.println(\"Kassere: \");\r\n                        System.out.println(\"_________________\");\r\n                        System.out.println(\"3. Tilbage til menu\");\r\n                        System.out.println();\r\n\r\n                        int KassereChoise = scanner.nextInt();\r\n                        switch (KassereChoise) {\r\n                            case 3:\r\n                                KassereRunning = false;\r\n                        }\r\n                    }\r\n                break;\r\n\r\n\r\n                case 3:\r\n                    boolean TrænerRuning = true;\r\n                    while (TrænerRuning) {\r\n                        System.out.println(\"Træner: \");\r\n                        System.out.println(\"_________________\");\r\n                        System.out.println(\"3. Tilbage til menu\");\r\n                        System.out.println();\r\n\r\n                        int TrænerChoise = scanner.nextInt();\r\n                        switch (TrænerChoise) {\r\n                            case 3:\r\n                                TrænerRuning = false;\r\n                        }\r\n                    }\r\n                break;\r\n\r\n                case 4:\r\n                    keepRunning = false;\r\n                    System.out.println(\"Programmet er afsluttet\");\r\n                    break;\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    public void printFormand() {\r\n        System.out.println(\"Formand: \");\r\n        System.out.println(\"_________________\");\r\n        System.out.println(\"1. Opret medlemmere\");\r\n        System.out.println(\"2. Vis alle medlemmer\");\r\n        System.out.println(\"3. Tilbage til menu\");\r\n    }\r\n\r\n    public void printMenu() {\r\n        System.out.println();\r\n        System.out.println(\"Velkommen til Svømmeklubben Delfinen\");\r\n        System.out.println(\"Vælge imellem disse personer: \");\r\n        System.out.println();\r\n        System.out.println(\"1. Formand\");\r\n        System.out.println(\"2. Kassere\");\r\n        System.out.println(\"3. Træner\");\r\n        System.out.println(\"4. Afslut\");\r\n    }\r\n\r\n    private String readString() {\r\n        String readString;\r\n        do {\r\n            readString = scanner.nextLine();\r\n            if (readString.isEmpty()) {\r\n                System.out.println(\"Ugyldigt input.\");\r\n            }\r\n        }\r\n        while (readString.isEmpty());\r\n        return readString;\r\n    }\r\n\r\n    private int readInt() {\r\n        while (!scanner.hasNextInt()) {\r\n            String text = scanner.nextLine();\r\n            System.out.println(text + \" er ugyldigt input. Prøv igen.\");\r\n        }\r\n        int result;\r\n        result = scanner.nextInt();\r\n        scanner.nextLine();\r\n        return result;\r\n    }\r\n\r\n    private double readDouble() {\r\n        while (!scanner.hasNextDouble()) {\r\n            String text = scanner.nextLine();\r\n            System.out.println(text + \" er ugyldigt input. Prøv igen.\");\r\n        }\r\n        double result;\r\n        result = scanner.nextDouble();\r\n        scanner.nextLine();\r\n        return result;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/UserInterface.java b/src/main/java/UserInterface.java
--- a/src/main/java/UserInterface.java	(revision 7923ebbc37c36f23d79d3ec752584cff5be4bd02)
+++ b/src/main/java/UserInterface.java	(date 1701181292047)
@@ -5,6 +5,7 @@
 import java.util.Scanner;
 
 public class UserInterface {
+    Scanner scanner = new Scanner(System.in);
 
     public void StartProgram() {
 
@@ -13,6 +14,7 @@
         DataBase dataBase = new DataBase();
         boolean keepRunning = true;
 
+
         while (keepRunning) {
             printMenu();
 
@@ -38,21 +40,23 @@
                                 System.out.println("_________________");
 
                                 boolean validDate = false;
+                                String birthdate = null;
                                 System.out.println("Fødselsdato (dd-MM-yyyy)");
-                                String birthday = scanner.nextLine();
                                 while (!validDate) {
                                     birthdate = scanner.nextLine();
                                     try {
                                         DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
 
-                                        LocalDate birthdate = LocalDate.parse(birthday, formatter);
+                                        LocalDate birthday = LocalDate.parse(birthdate, formatter);
                                         LocalDate currentDate = LocalDate.now();
                                         int age = Period.between(birthday, currentDate).getYears();
 
                                         if (age < 18) {
                                             System.out.println(fullName + " er " + age + " år gammel " + "og er derfor juniorsvømmer.");
+                                            validDate = true;
                                         } else {
                                             System.out.println(fullName + " er " + age + " år gammel " + "og er derfor seniorsvømmer.");
+                                            validDate = true;
                                         }
 
                                     } catch (Exception e) {
@@ -65,7 +69,6 @@
                                 String gender = "";
                                 while (!gender.equalsIgnoreCase("Dreng") && !gender.equalsIgnoreCase("Mand") &&
                                         !gender.equalsIgnoreCase("Pige") && !gender.equalsIgnoreCase("Kvinde")) {
-                                    System.out.println("Køn (Dreng/Mand/Pige/Kvinde)");
                                     gender = scanner.nextLine();
 
                                     if (!gender.equalsIgnoreCase("Dreng") && !gender.equalsIgnoreCase("Mand") &&
@@ -90,7 +93,8 @@
 
 
                                 System.out.println("Er medlemmet konkurrencesvømmer (ja/nej)?");
-                                String CompetitionSwimmer = scanner.nextLine();
+                                String CompetitionSwimmer = readString();
+                                System.out.println("_________________");
 
                                 if (CompetitionSwimmer.equals("ja")) {
 
@@ -108,6 +112,7 @@
                                 dataBase.gemOplysningerICSV(birthdate, fullName, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer);
                                 break;
 
+
                             case 2:
                                 System.out.println("Her er medlemmerne i delfinsvømmeklubben: ");
                                 System.out.println();
@@ -127,37 +132,37 @@
 
 
                 case 2:
-                    boolean KassereRunning = true;
-                    while (KassereRunning) {
+                    boolean kassereRunning = true;
+                    while (kassereRunning) {
                         System.out.println("Kassere: ");
                         System.out.println("_________________");
                         System.out.println("3. Tilbage til menu");
                         System.out.println();
 
-                        int KassereChoise = scanner.nextInt();
-                        switch (KassereChoise) {
+                        int kassereChoise = scanner.nextInt();
+                        switch (kassereChoise) {
                             case 3:
-                                KassereRunning = false;
+                                kassereRunning = false;
                         }
                     }
-                break;
+                    break;
 
 
-                case 3:
-                    boolean TrænerRuning = true;
-                    while (TrænerRuning) {
+                   case 3:
+
+                    boolean trænerRuning = true;
+                    while (trænerRuning) {
                         System.out.println("Træner: ");
                         System.out.println("_________________");
                         System.out.println("3. Tilbage til menu");
                         System.out.println();
-
-                        int TrænerChoise = scanner.nextInt();
-                        switch (TrænerChoise) {
+                        int trænerChoise = scanner.nextInt();
+                        switch (trænerChoise) {
                             case 3:
-                                TrænerRuning = false;
+                                trænerRuning = false;
                         }
                     }
-                break;
+                    break;
 
                 case 4:
                     keepRunning = false;

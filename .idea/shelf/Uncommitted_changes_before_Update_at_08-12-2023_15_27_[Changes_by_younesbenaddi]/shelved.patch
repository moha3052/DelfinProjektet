Index: src/main/java/UserInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.time.LocalDate;\r\nimport java.time.Period;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Scanner;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class UserInterface {\r\n    Scanner scanner = new Scanner(System.in);\r\n    DataBase dataBase = new DataBase();\r\n    KasserLogik kasseren = new KasserLogik();\r\n\r\n\r\n\r\n\r\n\r\n    public void printMenu() {\r\n        System.out.println();\r\n        System.out.println(\"Velkommen til Svømmeklubben Delfinen\");\r\n        System.out.println(\"Vælge imellem disse personer: \");\r\n        System.out.println();\r\n        System.out.println(\"1. Formand\");\r\n        System.out.println(\"2. Kassere\");\r\n        System.out.println(\"3. Træner\");\r\n        System.out.println(\"4. Afslut\");\r\n    }\r\n\r\n\r\n    public void StartProgram() {\r\n        boolean keepRunning = true;\r\n\r\n        while (keepRunning) {\r\n            printMenu();\r\n            try {\r\n                int valgAfMuligheder = scanner.nextInt();\r\n\r\n                switch (valgAfMuligheder) {\r\n                    case 1:\r\n                        handleFormand();\r\n                        break;\r\n                    case 2:\r\n                        handleKassere();\r\n                        break;\r\n                    case 3:\r\n                        handletræner();\r\n                        break;\r\n                    case 4:\r\n                        keepRunning = false;\r\n                        dataBase.gemMedlemlistTilCSV();\r\n                        System.out.println(\"Programmet er afsluttet\");\r\n                        break;\r\n                    default:\r\n                        System.out.println(\"Ugyldigt valg. Prøv igen.\");\r\n                }\r\n            } catch (java.util.InputMismatchException e) {\r\n                System.out.println(\"Ugyldig indtastning. Indtast venligst et heltal.\");\r\n\r\n                scanner.nextLine();\r\n            }\r\n        }\r\n        scanner.close();\r\n    }\r\n\r\n\r\n    public void printFormand() {\r\n        System.out.println(\"Formand: \");\r\n        System.out.println(\"_________________\");\r\n        System.out.println(\"1. Opret medlemmere\");\r\n        System.out.println(\"2. Vis alle medlemmer\");\r\n        System.out.println(\"3. Redigere medlemmet udfra id\");\r\n        System.out.println(\"4. Tilbage til menu\");\r\n    }\r\n\r\n\r\n    public void handleFormand() {\r\n        boolean formandRunning = true;\r\n\r\n        while (formandRunning) {\r\n            printFormand();\r\n            int formandChoice = scanner.nextInt();\r\n\r\n\r\n            switch (formandChoice) {\r\n                case 1:\r\n                    opretMedlem();\r\n                    break;\r\n                case 2:\r\n                    visMedlemmer();\r\n                    break;\r\n                case 3:\r\n                    redigerMedlem();\r\n                    break;\r\n                case 4:\r\n                    formandRunning = false;\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Ugyldigt valg. Prøv igen.\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    //==============================================================================\r\n//==============================Formand==========================================\r\n    private void opretMedlem() {\r\n        System.out.println();\r\n        System.out.println(\"Fulde navn\");\r\n        scanner.nextLine();\r\n        String fullName = readString();\r\n\r\n\r\n        System.out.println(\"_________________\");\r\n\r\n        boolean validDate = false;\r\n        String birthdate = null;\r\n        System.out.println(\"Fødselsdato (dd-MM-yyyy)\");\r\n        while (!validDate) {\r\n            birthdate = scanner.nextLine();\r\n            try {\r\n                DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");\r\n\r\n                LocalDate birthday = LocalDate.parse(birthdate, formatter);\r\n                LocalDate currentDate = LocalDate.now();\r\n                int age = Period.between(birthday, currentDate).getYears();\r\n\r\n                if (age <= 17) {\r\n                    System.out.println(fullName + \" er \" + age + \" år gammel \" + \"og er derfor juniorsvømmer.\");\r\n                    validDate = true;\r\n                } else if (age >= 18 && age <= 59) {\r\n                    System.out.println(fullName + \" er \" + age + \" år gammel \" + \"og er derfor seniorsvømmer.\");\r\n                    validDate = true;\r\n                } else if (age >= 60) {\r\n                    System.out.println(fullName + \" er \" + age + \" år gammel \" + \"og er derfor pensionist.\");\r\n                    validDate = true;\r\n                }\r\n            } catch (Exception e) {\r\n                System.out.println(\"Der opstod en fejl. Prøv igen.\");\r\n            }\r\n        }\r\n\r\n        System.out.println(\"_________________\");\r\n\r\n        System.out.println(\"Køn (Mand/Kvinde)\");\r\n        String gender = \"\";\r\n        while (!gender.equalsIgnoreCase(\"Mand\") && !gender.equalsIgnoreCase(\"Kvinde\")) {\r\n            gender = scanner.nextLine();\r\n\r\n            if (!gender.equalsIgnoreCase(\"Mand\") && !gender.equalsIgnoreCase(\"Kvinde\")) {\r\n                System.out.println(\"Ugyldigt input. \\nPrøv igen\");\r\n            }\r\n            System.out.println(\"_________________\");\r\n        }\r\n\r\n        String email;\r\n        while (true) {\r\n            System.out.println(\"E-mail\");\r\n            email = scanner.nextLine();\r\n\r\n            if (isValidEmail(email)) {\r\n                break;\r\n            } else {\r\n                System.out.println(\"Ugyldig e-mail, prøv igen.\");\r\n            }\r\n        }\r\n\r\n        System.out.println(\"_________________\");\r\n\r\n        System.out.println(\"Mobilnummer\");\r\n        int phoneNumber = readInt();\r\n        System.out.println(\"_________________\");\r\n\r\n        System.out.println(\"Adresse\");\r\n        String adress = readString();\r\n        System.out.println(\"_________________\");\r\n\r\n\r\n\r\n        System.out.println(\"Er medlemmet konkurrencesvømmer (ja/nej)?\");\r\n        String CompetitionSwimmer = readString();\r\n        System.out.println(\"_________________\");\r\n\r\n        if (CompetitionSwimmer.equals(\"ja\")) {\r\n\r\n        } else if (CompetitionSwimmer.equals(\"nej\")) {\r\n\r\n        } else {\r\n            System.out.println(\"Ugyldigt svar. Indtast enten 'ja' eller 'nej'.\");\r\n        }\r\n\r\n\r\n        System.out.println();\r\n        System.out.println(fullName + \" \" + \"er blevet registreret i klubben\");\r\n        System.out.println();\r\n        int idNumber = dataBase.getMedlemsListe().size() + 1;\r\n        System.out.println(\"Medlemmets ID nummer er \" + idNumber );\r\n        System.out.println();\r\n        dataBase.tilføjMedlemTilArray(new Medlem(birthdate, fullName, gender, idNumber, email, phoneNumber, adress, CompetitionSwimmer));\r\n        dataBase.gemMedlemlistTilCSV();\r\n    }\r\n\r\n    public void visMedlemmer() {\r\n        System.out.println(\"Her er medlemmerne i delfinsvømmeklubben: \");\r\n        System.out.println();\r\n        System.out.println(\"_________________\");\r\n        System.out.println();\r\n        dataBase.printMedlemsList();\r\n    }\r\n\r\n    public void redigerMedlem() {\r\n        visMedlemmer();\r\n        System.out.println(\"Indtast medlemmets ID:\");\r\n        int id = readInt();\r\n        Medlem medlem = dataBase.findMedlemById(id);\r\n\r\n        if (medlem != null) {\r\n            System.out.println(\"Vælg hvad du vil redigere:\");\r\n            System.out.println(\"1. Navn\");\r\n            System.out.println(\"2. Fødselsdato\");\r\n            System.out.println(\"3. Email\");\r\n            System.out.println(\"4. Indtast nyt mobilnummer\");\r\n            System.out.println(\"5. Er medlemmets aktivitetsstatus ændret?\");\r\n            System.out.println(\"6. Hvor meget har medlemmet betalt?\");\r\n            System.out.println(\"7. Er medlemmets stadigvæk aktiv?\");\r\n\r\n            int valg = readInt();\r\n            switch (valg) {\r\n                case 1:\r\n                    System.out.println(\"Indtast nyt navn:\");\r\n                    String nytNavn = readString();\r\n                    medlem.setFullName(nytNavn);\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"Indtast ny fødselsdag\");\r\n                    String nytFødselsdag = readString();\r\n                    medlem.setBirthdate(nytFødselsdag);\r\n                    break;\r\n                case 3:\r\n                    System.out.println(\"Indtast ny E-mail\");\r\n                    String nytEmail = readString();\r\n                    medlem.setEmail(nytEmail);\r\n                    break;\r\n                case 4:\r\n                    System.out.println(\"Indtast nyt mobilnummer\");\r\n                    int nytPhonenumber = readInt();\r\n                    medlem.setPhoneNumber(nytPhonenumber);\r\n                    break;\r\n                case 5:\r\n                    System.out.println(\"Er medlemmets aktivitetsstatus ændret? tast, 'Ja' eller 'nej'\");\r\n                    String newCompetitionSwimmer = readString();\r\n                    medlem.setCompetitionSwimmer(newCompetitionSwimmer);\r\n                    break;\r\n                case 6:\r\n                    System.out.println(\"Hvor meget har medlemmet betalt?\");\r\n                    int nytRestance = readInt();\r\n                    medlem.setBeløbBetalt(nytRestance);\r\n                    break;\r\n\r\n                case 7:\r\n                    System.out.println(\"Er medlemmets stadig aktiv? tast, 'Ja' eller 'nej'\");\r\n                    boolean passiv = readBoolean();\r\n                    medlem.setisaktiv(passiv);\r\n                default:\r\n                    System.out.println(\"Ugyldigt valg.\");\r\n            }\r\n            dataBase.opdaterMedlemIDatabase(medlem);\r\n            System.out.println();\r\n            System.out.println(\"Medlemmet er opdateret.\");\r\n            System.out.println();\r\n        } else {\r\n            System.out.println(\"Medlem med ID \" + id + \" blev ikke fundet.\");\r\n        }\r\n    }\r\n    public static boolean isValidEmail(String email) {\r\n        return email.contains(\"@\") && email.contains(\".\");\r\n    }\r\n\r\n//==============================================================================\r\n//==============================TRÆNER==========================================\r\n\r\n\r\n\r\n    public void printTræner() {\r\n        System.out.println();\r\n        System.out.println(\"Træner: \");\r\n        System.out.println(\"_________________\");\r\n        System.out.println(\"1. Registrere resultater\");\r\n        System.out.println(\"2. Redigere i resultaterne\");\r\n        System.out.println(\"3. vis alle resultater\");\r\n        System.out.println(\"4. Tilbage til menu\");\r\n        System.out.println();\r\n    }\r\n\r\n\r\n    public void handletræner() {\r\n        boolean trænerRunning = true;\r\n\r\n        while (trænerRunning) {\r\n            printTræner();\r\n            int trænerChoice = scanner.nextInt();\r\n\r\n            switch (trænerChoice) {\r\n                case 1:\r\n                    registredisciplin();\r\n                    break;\r\n                case 2:\r\n                    redigerResultat();\r\n                    break;\r\n                case 3:\r\n                    visResultater();\r\n                    break;\r\n                case 4:\r\n                    trænerRunning = false;\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Ugyldigt valg. Prøv igen.\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public void visResultater() {\r\n        dataBase.printResultaterList();\r\n    }\r\n\r\n    public void visMedlemmersResultater() {\r\n        System.out.println(\"Her er medlemmerne i delfinsvømmeklubben: \");\r\n        System.out.println();\r\n        System.out.println(\"_________________\");\r\n        System.out.println();\r\n        visResultater();\r\n    }\r\n\r\n\r\n    public void registreTid() {\r\n        try {\r\n            visMedlemmer();\r\n            System.out.println(\"\\nIndtast medlemmets ID:\");\r\n            int id = readInt();\r\n            Medlem medlem = dataBase.findMedlemById(id);\r\n\r\n                if (medlem != null) {\r\n                    String type = \"\";\r\n                    while (!type.equals(\"træning\") && !type.equals(\"stævne\")) {\r\n                        System.out.println(\"Indtast 'træning' eller 'stævne':\");\r\n                        type = scanner.nextLine().toLowerCase();\r\n\r\n                        switch (type) {\r\n                            case \"træning\":\r\n                                System.out.println(\"Du har valgt træning.\");\r\n                                break;\r\n                            case \"stævne\":\r\n                                System.out.println(\"Du har valgt stævne.\");\r\n                                break;\r\n                            default:\r\n                                System.out.println(\"Ugyldigt valg, prøv igen.\");\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    System.out.println(\"\\nIndtast dato (f.eks. dd-mm-yyyy):\");\r\n                    String dato = null;\r\n                    boolean validDate = false;\r\n                    while (!validDate) {\r\n                        try {\r\n                            dato = readString();\r\n                            validDate = true;\r\n                            System.out.println(\"Du har valgt datoen.\");\r\n                        } catch (Exception e) {\r\n                            System.out.println(\"Der opstod en fejl. Prøv igen.\");\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n\r\n\r\n                    System.out.println(\"\\nIndtast disciplin indenfor (butterfly, crawl, rygcrawl, brystsvømning)\");\r\n                    String disciplin = \"\";\r\n                    while (!Arrays.asList(\"butterfly\", \"crawl\", \"rygcrawl\", \"brystsvømning\").contains(disciplin)) {\r\n                        disciplin = scanner.nextLine().toLowerCase();\r\n\r\n                        if (Arrays.asList(\"butterfly\", \"crawl\", \"rygcrawl\", \"brystsvømning\").contains(disciplin)) {\r\n                            System.out.println(\"Du har valgt \" + disciplin + \".\");\r\n                        } else {\r\n                            System.out.println(\"Ugyldigt valg, prøv igen.\");\r\n                        }\r\n                    }\r\n\r\n                    String tid;\r\n                    Pattern pattern = Pattern.compile(\"^([0-5]?\\\\d)m([0-5]?\\\\d)s$\");\r\n\r\n                    while (true) {\r\n                        System.out.println(\"\\nIndsæt tid (målt i minutter og sekunder, f.eks. 5m30s):\");\r\n                        tid = scanner.nextLine();\r\n                        Matcher matcher = pattern.matcher(tid);\r\n\r\n                        if (matcher.find()) {\r\n                            System.out.println(\"Du har indtastet: \" + matcher.group(1) + \" minutter og \" + matcher.group(2) + \" sekunder.\");\r\n                            break;\r\n                        } else {\r\n                            System.out.println(\"Ugyldigt format. Prøv igen.\");\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    int idNumber = dataBase.getResultaterList().size() + 1;\r\n                    System.out.println();\r\n                    System.out.println(medlem.getFullName() + \" \" + \"har fået oprettet sine resultater.\");\r\n                    dataBase.tilføjResultaterTilArray(new Resultater(type, dato, disciplin, medlem.getFullName(), medlem.getIdNumber(), tid));\r\n                    dataBase.gemResultattilCsv();\r\n                } else {\r\n                    System.out.println(\"Medlem blev ikke fundet\");\r\n                }\r\n            } catch (Exception e) {\r\n                System.out.println(\"Der opstod en fejl: \" + e.getMessage());\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public void redigerResultat() {\r\n        visMedlemmersResultater();\r\n        System.out.println();\r\n        System.out.println(\"Indtast medlemmets ID:\");\r\n        int id = readInt();\r\n        System.out.println();\r\n        ArrayList<Resultater> resultater = findResultatPåId(id);\r\n        dataBase.findMedlemById(id);\r\n\r\n\r\n        if (resultater != null) {\r\n            int input = 0;\r\n            if(resultater.size() == 1){\r\n                input = 1;\r\n            }else {\r\n                System.out.println(\"vælg mellem disse:\");\r\n                System.out.println();\r\n                for (int i = 0; i < resultater.size(); i++) {\r\n                    System.out.print(i + 1);\r\n                    System.out.println(resultater.get(i));\r\n                }\r\n                input = readInt();\r\n            }\r\n\r\n\r\n            Resultater r = resultater.get(input -1);\r\n            System.out.println(\"Vælg hvad du vil redigere:\");\r\n            System.out.println(\"1. Øvelse (Træning eller stævne) \");\r\n            System.out.println(\"2. Dato\");\r\n            System.out.println(\"3. diciplin indenfor (butterfly, crawl, rygcrawl og brystsvømning)\");\r\n            System.out.println(\"4. tid\");\r\n\r\n            int valgMuligheder = readInt();\r\n            switch (valgMuligheder) {\r\n                case 1:\r\n                    System.out.println(\"Indtast ny øvelse:\");\r\n                    String nyØvelse = readString();\r\n                    r.setType(nyØvelse);\r\n                    break;\r\n                case 2:\r\n                    System.out.println(\"Indtast ny dato (f.eks. dd-mm-yyyy):\");\r\n                    boolean validDate = false;\r\n                    LocalDate nytDato =null;\r\n                    while (!validDate) {\r\n                        try {\r\n                            String day = readString();\r\n\r\n                            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");\r\n                            LocalDate localDate = LocalDate.parse(day, formatter);\r\n                            nytDato = localDate;\r\n                            validDate = true;\r\n                            System.out.println(\"Du har valgt datoen.\");\r\n                        } catch (Exception e) {\r\n                            System.out.println(\"Der opstod en fejl. Prøv igen.\");\r\n                        }\r\n\r\n                    }\r\n                    r.setDato(nytDato);\r\n                    break;\r\n                case 3:\r\n                    System.out.println(\"Indtast ny diciplin indenfor (butterfly, crawl, rygcrawl og brystsvømning)\");\r\n                    String nytDiciplin = readString();\r\n                    r.setDisciplin(nytDiciplin);\r\n                    break;\r\n                case 4:\r\n                    System.out.println(\"Indtast ny tid\");\r\n                    String nytTid = readString();\r\n                    r.setTid(nytTid);\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Ugyldigt valg.\");\r\n            }\r\n            dataBase.opdaterResultatIDatabase(r);\r\n            System.out.println();\r\n            System.out.println(\"Resultaterne er opdateret.\");\r\n            dataBase.gemResultattilCsv();\r\n        } else {\r\n            System.out.println(\"Medlem: \" + id + \" blev ikke fundet.\");\r\n        }\r\n    }\r\n\r\n    public void registredisciplin() {\r\n        System.out.println(\"Registre medlemmets resultat indenfor Øvelse, Datoer, Diciplin og Tid:\");\r\n        registreTid();\r\n    }\r\n\r\n    public ArrayList<Resultater> findResultatPåId(int id) {\r\n        ArrayList<Resultater> midleretideResultat = new ArrayList<>();\r\n\r\n        for (Resultater resultat : dataBase.getResultaterList()) {\r\n            if (resultat.getMedlemsId() == id) {\r\n                midleretideResultat.add(resultat);\r\n            }\r\n        }\r\n        return midleretideResultat;\r\n    }\r\n\r\n //==============================================================================\r\n//==============================kasseren==========================================\r\n\r\n    public void printKassere() {\r\n        System.out.println();\r\n        System.out.println(\"Kassere: \");\r\n        System.out.println(\"_________________\");\r\n        System.out.println(\"1. Oversigt over årlig indbetaling\");\r\n        System.out.println(\"2. Oversigt over medlemmer\");\r\n        System.out.println(\"3. Oversigt over medlemmer i restance\");\r\n        System.out.println(\"4. Tilbage til menu\");\r\n        System.out.println();\r\n    }\r\n\r\n    public void handleKassere () {\r\n        boolean kassereRunning = true;\r\n\r\n        while (kassereRunning) {\r\n            printKassere();\r\n            int kassereChoice = scanner.nextInt();\r\n\r\n            switch (kassereChoice) {\r\n                case 1:\r\n                    System.out.println(\"Årlig indbetaling: \");\r\n                    OversigtOverKontingent();\r\n                    break;\r\n                case 2:\r\n                    visMedlemmer();\r\n                    System.out.println(\"Venligst indtast et medlemsID for at se en oversigt over medlemmets navn, samt kontigent:\");\r\n                    int id = readInt();\r\n                    Medlem medlem = dataBase.findMedlemById(id);\r\n                    System.out.println(medlem.getFullName() + \" betaler \" + KasserLogik.medlemsKontingent(medlem)+ \"DKK om året\");\r\n                    break;\r\n                case 3:\r\n                    System.out.println(\"Her er en oversigt over medlemmer med manglende betaling:\");\r\n                    System.out.println(\"Venligst indtast et medlemsID for at se en oversigt over medlemmers stamoplysninger, samt Restance:\");\r\n                    int id1 = readInt();\r\n                    Medlem medlem1 = dataBase.findMedlemById(id1);\r\n                    System.out.println(medlem1.getFullName() + \"s restance \" + kasseren.medlemRestance()+ \"kr.\");\r\n                    break;\r\n                case 4:\r\n                    kassereRunning = false;\r\n                    break;\r\n                default:\r\n                    System.out.println(\"Ugyldigt valg. Prøv igen.\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public void OversigtOverKontingent() {\r\n        System.out.println(\"Oversigt over årlig indbetaling:\");\r\n        System.out.println(kasseren.oversigtOverKontingent() + \"DKK\");\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==============================================================================\r\n//==============================Metoder til at håndter fejl==========================================\r\n\r\n    String readString() {\r\n        String readString;\r\n        do {\r\n            readString = scanner.nextLine();\r\n            if (readString.isEmpty()) {\r\n                System.out.println(\"prøv igen\");\r\n            }\r\n        }\r\n        while (readString.isEmpty());\r\n        return readString;\r\n    }\r\n\r\n    int readInt() {\r\n        while (!scanner.hasNextInt()) {\r\n            String text = scanner.nextLine();\r\n            System.out.println(text + \" er ugyldigt input. Prøv igen.\");\r\n        }\r\n        int result;\r\n        result = scanner.nextInt();\r\n        scanner.nextLine();\r\n        return result;\r\n    }\r\n\r\n    private double readDouble() {\r\n        while (!scanner.hasNextDouble()) {\r\n            String text = scanner.nextLine();\r\n            System.out.println(text + \" er ugyldigt input. Prøv igen.\");\r\n        }\r\n        double result;\r\n        result = scanner.nextDouble();\r\n        scanner.nextLine();\r\n        return result;\r\n    }\r\n\r\n    public boolean readBoolean() {\r\n        while (true) {\r\n            System.out.print(\"Indtast 'ja' eller 'nej': \");\r\n            String input = scanner.nextLine().trim().toLowerCase();\r\n\r\n\r\n            if (input.equals(\"ja\")) {\r\n                System.out.println(\"Du svarede 'ja'.\");\r\n                return true;\r\n            } else if (input.equals(\"nej\")) {\r\n                System.out.println(\"Du svarede 'nej'.\");\r\n                return false;\r\n            } else {\r\n                System.out.println(\"Ugyldigt input. Prøv igen.\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/UserInterface.java b/src/main/java/UserInterface.java
--- a/src/main/java/UserInterface.java	(revision ec7c623a8085ca57ebc3a32df6c972ba993c3ce5)
+++ b/src/main/java/UserInterface.java	(date 1702045083042)
@@ -558,7 +558,7 @@
                     System.out.println("Venligst indtast et medlemsID for at se en oversigt over medlemmers stamoplysninger, samt Restance:");
                     int id1 = readInt();
                     Medlem medlem1 = dataBase.findMedlemById(id1);
-                    System.out.println(medlem1.getFullName() + "s restance " + kasseren.medlemRestance()+ "kr.");
+                    System.out.println(medlem1.getFullName() + " skylder " + kasseren.medlemRestance()+ "DKK.");
                     break;
                 case 4:
                     kassereRunning = false;
